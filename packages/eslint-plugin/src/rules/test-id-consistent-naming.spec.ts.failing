"use strict";

const rule = require("./test-id-consistent-naming"),
  RuleTester = require("eslint").RuleTester;

const ruleTester = new RuleTester();

const happyPath = "<div data-test-id={testIds.button} />";

ruleTester.run("test-id-consistent-naming", rule, {
  valid: [
    {
      code: happyPath,
    },
  ],

  invalid: [
    {
      code: "<div testId={testIds.button} />",
      errors: [{ message: "Test ID attribute should be named data-test-id" }],
      output: happyPath,
    },
    {
      code: "<div data-id-test={testIds.button} />",
      errors: [{ message: "Test ID attribute should be named data-test-id" }],
      output: happyPath,
    },
    {
      code: "<div data-testId={testIds.button} />",
      errors: [{ message: "Test ID attribute should be named data-test-id" }],
      output: happyPath,
    },
    {
      code: "<div data-testID={testIds.button} />",
      errors: [{ message: "Test ID attribute should be named data-test-id" }],
      output: happyPath,
    },
    {
      code: "<div dataTestId={testIds.button} />",
      errors: [{ message: "Test ID attribute should be named data-test-id" }],
      output: happyPath,
    },
    {
      code: "<div datatestid={testIds.button} />",
      errors: [{ message: "Test ID attribute should be named data-test-id" }],
      output: happyPath,
    },
    {
      code: "<div data-testid={testIds.button} />",
      errors: [{ message: "Test ID attribute should be named data-test-id" }],
      output: happyPath,
    },
  ],
});
